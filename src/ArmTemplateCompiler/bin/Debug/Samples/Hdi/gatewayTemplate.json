{
    "$schema": "http://schema.management.azure.com/schemas/2014-04-01-preview/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "location": {
            "type": "string",
            "defaultValue": "East Asia",
            "allowedValues": [
                "East Asia",
                "West US",
                "East US"
            ]
        },
        "subscriptionId": {
            "type": "string",
            "defaultValue": "2843db96-7d25-4cf5-8e67-71baed52dfb7"
        },
        "VmSize": {
            "type": "string",
            "defaultValue": "Standard_A1",
            "allowedValues": [
                "Standard_A0",
                "Standard_A1",
                "Standard_A2",
                "Standard_A3",
                "Standard_A4"
            ]
        },
        "AvailabilitySetName": {
            "type": "string",
            "defaultValue": "wokernode-availabilityset"
        },
        "NumberOfVirtualMachines": {
            "type": "int",
            "defaultValue": 1
        },
        "VirtualNetworkSettings": {
            "type": "object",
            "defaultValue": {
                "virtualNetworkName": "vnet",
                "subnetName": "subnet"
            }
        },
        "VmImageSettings": {
            "type": "array",
            "defaultValue": [
                {
                    "sourceImageUri": "https://d0easiacurrent.blob.core.windows.net/vhd/clusterNode.vhd",
                    "targetVhdUri": "https://d0easiacurrent.blob.core.windows.net/targetvhd1/clusterNode.vhd"
                }
            ]
        },
        "AdminUsername": {
            "type": "string",
            "defaultValue": "hdiuser"
        },
        "AdminPassword": {
            "type": "string",
            "defaultValue": "HdInsight123!"
        }
    },
        "variables": {
            "virtualNetworkResourceId": "[resourceId('Microsoft.Network/virtualNetworks',parameters('VirtualNetworkSettings').virtualNetworkName)]",
            "subnetId": "[concat(variables('virtualNetworkResourceId'),'/subnets/', parameters('VirtualNetworkSettings').subnetName)]",
            "nicNamePrefix": "[concat('nic-', parameters('AvailabilitySetName'),'-')]",
            "vmNamePrefix": "[concat(parameters('AvailabilitySetName'),'-vm-')]",
        },
    "resources": [
        
        {
          "apiVersion": "2014-12-01-preview",
          "type": "Microsoft.Network/virtualNetworks",
          "name": "[parameters('VirtualNetworkSettings').virtualNetworkName]",
          "location": "[parameters('location')]",
          "properties": {
            "addressSpace": {
              "addressPrefixes": [
                "10.0.0.0/16"
              ]
            },
            "subnets": [
              {
                "name": "[parameters('VirtualNetworkSettings').subnetName]",
                "properties": {
                  "addressPrefix": "10.0.0.0/24"
                }
              }
            ]
          }
        },
        

        /*Create all availability set */
        {
            "type": "Microsoft.Compute/availabilitySets",
            "name": "[parameters('AvailabilitySetName')]",
            "apiVersion": "2014-12-01-preview",
            "location": "[parameters('location')]"
        },

        /*Create all nics */
        {
            "apiVersion": "2014-12-01-preview",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[concat(variables('nicNamePrefix'),  copyIndex())]",
            "location": "[parameters('location')]",
            "copy": {
                "name": "foo",
                "count": "[parameters('NumberOfVirtualMachines')]"
            },
            "dependsOn": [
                //"[concat('Microsoft.Network/virtualNetworks/',parameters('VirtualNetworkSettings').virtualNetworkName)]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('subnetId')]"
                            }
                        }
                    }
                ]
            }
        },

        {
            "apiVersion": "2014-12-01-preview",
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[concat(variables('vmNamePrefix'), copyIndex())]",
            "location": "[parameters('location')]",
            "copy": {
                "name": "foo",
                "count": "[parameters('NumberOfVirtualMachines')]"
            },
            "dependsOn": [
                "[concat('Microsoft.Network/networkInterfaces/', variables('nicNamePrefix'), copyIndex())]",
                "[concat('Microsoft.Compute/availabilitySets/',parameters('AvailabilitySetName'))]"
            ],
            "properties": {
                "availabilitySet": {
                    "id": "[resourceId('Microsoft.Compute/availabilitySets', parameters('AvailabilitySetName'))]"
                },
                "hardwareProfile": {
                    "vmSize": "[parameters('VmSize')]"
                },
                "osProfile": {
                    "computername": "[concat('gw', copyIndex())]",
                    "adminUsername": "[parameters('AdminUsername')]",
                    "adminPassword": "[parameters('AdminPassword')]"
                },
                "storageProfile": {
                    "osDisk": {
                        "name": "gwosDisk",
                        "osType": "Windows",
                        "caching": "ReadWrite",
                        "image": {
                            "uri": "[parameters('VmImageSettings')[copyIndex()].sourceImageUri]"
                        },
                        "vhd": {
                            "uri": "[parameters('VmImageSettings')[copyIndex()].targetVhdUri]"
                        }
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('nicNamePrefix'), copyIndex()))]"
                        }
                    ]
                }
            }
        }

    ]
}

